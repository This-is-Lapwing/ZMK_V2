/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <19 20 21>;
        };

        bootleft {
            bindings = <&bootloader>;
            key-positions = <0 12 24>;
        };

        bootrigt {
            bindings = <&bootloader>;
            key-positions = <11 23 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp F         &kp P  &kp B        &kp J           &kp L      &kp U      &kp Y    &kp SEMICOLON  &kp BSPC
&kp LCTRL  &kp A  &kp R  &kp S         &kp T  &kp G        &kp M           &kp N      &kp E      &kp I    &kp O          &kp SQT
&kp DEL    &kp X  &kp C  &kp D         &kp V  &kp Z        &kp K           &kp H      &kp COMMA  &kp DOT  &kp FSLH       &kp ESC
                         &kp LEFT_ALT  &mo 1  &kp SPACE    &kp LEFT_SHIFT  &kp ENTER  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp DOLLAR   &kp EXCLAMATION  &kp HASH        &kp UP_ARROW    &kp PERCENT      &kp LEFT_BRACE          &kp RIGHT_BRACE        &kp KP_N7        &kp KP_N8  &kp KP_N9  &kp PLUS      &kp BSPC
&kp AT_SIGN  &kp PIPE         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp KP_N4        &kp KP_N5  &kp KP_N6  &kp MINUS     &kp EQUAL
&kp CARET    &kp TILDE        &kp AMPERSAND   &kp MINUS       &kp UNDERSCORE   &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp KP_NUMBER_1  &kp KP_N2  &kp KP_N3  &kp ASTERISK  &kp SLASH
                                              &kp LGUI        &trans           &kp SPACE               &kp RET                &kp DOT          &kp KP_N0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp EXCL         &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET     &kp AMPS         &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&bootloader     &rgb_ug RGB_BRI  &trans  &trans    &trans    &trans       &kp MINUS     &kp EQUAL        &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&bt BT_CLR_ALL  &rgb_ug RGB_TOG  &trans  &trans    &trans    &trans       &kp LEFT_WIN  &kp PRINTSCREEN  &kp LBRC   &kp RBRC  &kp PIPE  &bootloader
                                         &kp LGUI  &trans    &kp SPACE    &kp RET       &trans           &kp RALT
            >;
        };
    };
};
